version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: youruser
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: yourdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - booknetwork
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "youruser", "-d", "yourdb"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  bookservice:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Database=yourdb;Username=youruser;Password=yourpassword
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - db
    networks:
      - booknetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  authdb:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: AuthServiceDb
    volumes:
      - auth-postgres-data:/var/lib/postgresql/data
    networks:
      - booknetwork
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "AuthServiceDb"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  authbackend:
    image: amorags/authbackend:v1.0
    environment:
      - ConnectionStrings__DefaultConnection=Host=authdb;Database=AuthServiceDb;Username=postgres;Password=mysecretpassword
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - authdb
    networks:
      - booknetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

volumes:
  postgres-data:
  auth-postgres-data:

networks:
  booknetwork:
