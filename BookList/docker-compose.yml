version: '3.8'
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: youruser
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: yourdb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - booknetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U youruser -d yourdb"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  bookservice:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Database=yourdb;Username=youruser;Password=yourpassword
      - ASPNETCORE_ENVIRONMENT=Development
      # Add a retry mechanism for database connections
      - DB_CONNECTION_RETRIES=5
      - DB_CONNECTION_RETRY_DELAY=5
    depends_on:
      db:
        condition: service_healthy
    networks:
      - booknetwork
    # Don't add health check yet if you don't have a /health endpoint
      
  authdb:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: AuthServiceDb
    ports:
      - "5555:5432"
    volumes:
      - auth-postgres-data:/var/lib/postgresql/data
    networks:
      - booknetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d AuthServiceDb"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  authbackend:
    image: amorags/authbackend:v1.0
    ports:
      - "8080:8080"
    environment:
      - ConnectionStrings__DefaultConnection=Host=authdb;Database=AuthServiceDb;Username=postgres;Password=mysecretpassword
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      authdb:
        condition: service_healthy
    networks:
      - booknetwork
    # Don't add health check yet if you don't have a /health endpoint
      
volumes:
  postgres-data:
  auth-postgres-data:
networks:
  booknetwork: